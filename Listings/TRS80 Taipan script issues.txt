FILENAME=Taipan_TRS80-notabs-copy.txt

# Remove 5 spaces at start of line
sed 's/^ \{5\}//' ${FILENAME} # works
sed ’s/^\s\{5\}//‘ ${FILENAME} # not work - \s is accepted but does nothing
sed ’s/^\S\{5\}//‘ ${FILENAME} # not work - \S is accepted but does nothing

# Remove space before line number

sed 's/^ [0-9]\{5\}//‘ ${FILENAME}  # not work - incomplete line

# Remove space before line number, line number and one following space - where line number has 5 digits

sed 's/^ [[:digit:]]\{5\} //'
sed 's/^ [0-9]\{5\} //'

# However, these do not work

#sed 's/^ [[:digit:]]\+ //' 
#sed 's/^ [0-9]\+ //'
#sed 's/^ [0-9]+ //'     # this obviously won’t work as it needs the + to be escaped

# There is no match + “one or more times”
# Use extended RE instead

sed -E 's/^ [[:digit:]]+ //'
sed -E 's/^ [0-9]+ //'

# This reinstates the line number

sed 's/^ \([0-9]\{5\}\)1 /\1/‘ # does not work - incomplete line
sed 's/^ \([0-9]\{5\}\) /\1/‘ # does work

# In the above line (top), there is a problem with the syntax for the capture group
# extraneous 1 after the first capture group 

# This works
sed 's,^ [0-9]\{5\} ,,'

# These two don’t
sed 's,^ \([0-9]\{5\}\)1 ,,'
sed 's,^ \([0-9]\{5\}\)1 ,\1,'

# nor with backslash, see above

# Using \s not working either
sed 's/^\s[0-9]\+\s//'

# But that is due to a typo and an extraneous “1”
sed 's,^ \([0-9]\{5\}\) ,\1,'

# or ERE

sed -E 's,^ ([0-9]{3,5}) ,\1,' # can't use comma
sed -E 's/^ ([0-9]{3,5}) /\1/' # can't use comma


# Better to search for two spaces after line number

sed -E 's/^[[:space:]]([0-9]{3,5})[[:space:]]{2}/\1 /'

# Search for line numbers in one line
# and reinstate newline before, and one space after, the line number


sed -E 's/[[:space:]]([0-9]{3,5})[[:space:]]{2}/\n\1 /' # This doesn’t work
                                                        # BSD does not support \n

# Remove newlines

tr -d '\n'
awk 1 ORS=‘’ <filename>

# Remove newlines and replace with space

awk 1 ORS=‘ ‘ <filename>


# could replace return characters with a string (unusual chars), then use string with tr to replace with nothing or newlines and formatted line numbers


# Errors while pasting
# Line 220 : [ and }  when pasted, come out as arrows up and left respectively.
# Line 610 - to the power of” circumflex comes out as right arrow
# Line 1460 - Line too long to paste(?) and “:GOSUB 94” is missing
# No lower case in the TRS80



# Shorter version of over sized lines
# - Extraneous spaces removed

## Still with newlines (indentation removed):

1460 IF DW > 20000 AND NOT ( FN 
R(5)) THEN GOSUB 400: PRINT 
"Bad joss!!": PRINT FN R(3) 
+ 1;" of your bodyguards ha
ve been killed": PRINT "by c
utthroats and you have been 
robbed of all your cash, ";
T$;"!!": CALL 2512:CA=0:GOSUB 
300:GOSUB 94

## Newlines removed:

1460 IF DW > 20000 AND NOT ( FN R(5)) THEN GOSUB 400: PRINT "Bad joss!!": PRINT FN R(3) + 1;" of your bodyguards have been killed": PRINT "by cutthroats and you have been robbed of all your cash, ";T$;"!!": CALL 2512:CA=0:GOSUB 300:GOSUB 94

2501 GOSUB 400:IF CA > 25000 AND NOT ( FN R(20)) THEN I = FN R(CA / 1.4):WW = I:GOSUB 600:X = USR (25):PRINT "You've been beaten up and robbed of":PRINT WW$;" in cash, ";T$;"!!":CALL 2512:CA=CA-I: GOSUB 300:GOSUB 94:VTAB 22:HTAB 1:PRINT CE$

3320 GOSUB 400:PRINT "Storm, ";T$;"!!":CALL 2521:GOSUB 94:IF NOT ( FN R(30)) THEN  PRINT:PRINT "   I think we're going down!!":CALL 2521:GOSUB 94:IF FN R(DM / SC * 3) THEN  PRINT:PRINT "We're going down, Taipan!!":CALL 2512:OK=1:GOTO 2698

10062 VTAB 20: HTAB 31: PRINT IV$;CA$;"'ESC'";: FOR I = 1 TO 20:X = USR (0): IF PEEK ( - 16384) <  > 155 THEN NEXT : VTAB 20: HTAB 31: PRINT NV$;CA$ + "'ESC'";: FOR I = 1 TO 20:X =  USR (0): IF PEEK ( - 16384) <  > 155 THEN NEXT:GOTO 10062

10120 VTAB10:HTAB7:PRINTCS$;T$;",":VTAB12:HTAB3:PRINT"What will you name your":VTAB 15:HTAB 13:& 45,22:VTAB 14:HTAB 7:PRINT "Firm: ";CA$;:& 32,27:VTAB14:HTAB13:POKE33,39:CALL2200:POKE33,40:WK$=MID$(WK$,1):IF WK$ = "" THEN CALL2521:GOTO10120

10140 H$ = WK$: PRINT HM$;CS$: VTAB 6: PRINT "Do you want to start . . .": PRINT : PRINT : PRINT "  1) With cash (and a debt)": PRINT:PRINT:PRINT ,">> or <<": PRINT : PRINT : PRINT "  2) With five guns and no cash": PRINT ,"(But no debt!)"



# Length of line - rulers

# 64 * 3 + 49

1234567890123456789012345678901234567890123456789012345678901234123456789012345678901234567890123456789012345678901234567890123412345678901234567890123456789012345678901234567890123456789012341234567890123456789012345678901234567890123456789

# 241

1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901

# Line numbers missing space

150, 313, 610, 680, 1050, 1060, 1065, 1140, 1142, 1150, 1160, 1320, 1330, 1350, 1610, 1615, 1630, 1710, 1720, 1910, 2000, 2310, 2520, 2560, 2600, 2622, 2632, 2695, 2698, 3020, 3030, 3120, 3230, 3340, 3350, 5030, 5160, 5310, 5320, 5362, 5450, 5460, 5545, 5555, 5610, 5681, 5683, 5720, 5730, 5880, 10040, 10140, 10250, 10260, 10290, 10310, and 20010

# Fixing the missing space after line number
sed "$(printf '%ds/^ \([0-9]\{3,5\}\) / \1  /g;' 680 10250 10260 10290 10310 20010)" Taipan_TRS80-orig-list.txt > Taipan_TRS80-orig-list-missspace.txt  # Not work
sed 's/^ \(150\|20010\) / \1  /' Taipan_TRS80-orig.txtman # not work BSD


# Fixing the missing space after line number, alternative method (looking for a single space) 
sed 's/^ \([0-9]\{3,5\}\) \(.*\)/ \1  \2/' Taipan_TRS80-orig-list.txt > Taipan_TRS80-orig-list-missspace.txt # not work - adds space to every line
sed 's/^ \([0-9]\{3,5\}\) \([a-zA-Z0-9]*\)/ \1  \2/' Taipan_TRS80-orig-list.txt > Taipan_TRS80-orig-list-missspace.txt # not work - adds space to every line
# This ERE works:
sed -E 's/^ ([0-9]{3,5}) ([a-zA-Z0-9]+)/ \1  \2/' Taipan_TRS80-orig-list.txt > Taipan_TRS80-orig-list-missspace.txt 


# Commands

# Remove indentation of 5 spaces
sed 's/^ \{5\}//' Taipan_TRS80-orig-missspace.txt 
# No newline added - works on file with newlines
sed -E 's/^ ([0-9]{3,5})  /\1 /' Taipan_TRS80-orig-missspace.txt 
# No newline detect
perl -p -e 's/\s(\d{3,5})\s\s/\n$1 /g' Taipan_TRS80-orig-missspace.txt # adds extraneous newline - good for all newlines removed
perl -p -e 's/\s(\d{3,5})\s\s/$1 /g' Taipan_TRS80-orig-missspace.txt # works on file with newlines already
# Newline detected - not work
perl -p -e 's/\n\s(\d{3,5})\s\s/\n$1 /g' Taipan_TRS80-orig-missspace.txt # not work



#
# Final script
#

# Remove blank lines, “]LIST” and “]” at the end
sed '1,3d' Taipan_TRS80-orig.txt | sed '$d'|sed '$d'|sed '$d' > Taipan_TRS80-orig-list.txt
# or
sed '1,3d' Taipan_TRS80-orig.txt | tail -r | sed '1,3d' | tail -r > Taipan_TRS80-orig-list.txt

# Requirements: A file (Taipan_TRS80-orig-missspace.txt) with correct double space after line number (strange line numbers that are already fixed)

# Fixing the missing space after line number, alternative method (looking for a single space) 
sed -E 's/^ ([0-9]{3,5}) ([a-zA-Z0-9]+)/ \1  \2/' Taipan_TRS80-orig-list.txt > Taipan_TRS80-orig-list-missspace.txt 

# Remove 5 space indent
sed 's/^ \{5\}//' Taipan_TRS80-orig-list-missspace.txt > Taipan_TRS80-orig-list-missspace-indent.txt 

# Remove newlines
cat Taipan_TRS80-orig-list-missspace-indent.txt | tr -d '\n'> Taipan_TRS80-orig-list-missspace-indent-1line.txt 

# Add newline and remove spaces either side of line number
perl -p -e 's/\s(\d{3,5})\s\s/\n$1 /g' Taipan_TRS80-orig-list-missspace-indent-1line.txt > Taipan_TRS80-orig-list-missspace-indent-1line-fixed.txt 

# Add newline to end of file? (no longer required?)
#echo '\n' >> Taipan_TRS80-orig-missspace-indent-1line-fixed.txt

# Tidy the 2 digit line numbers - remove second space, and preceding space 
# and re-add striped out newline preceding two digit line number
# 
# This will work for lines 10-98, as there are no other two digit numbers
# but it could fail further down the code:
# *if* there is a two digit number followed by two spaces 
# - However, there are **not**
perl -p -e 's/\s(\d{2})\s\s/\n$1 /g' Taipan_TRS80-orig-list-missspace-indent-1line-fixed.txt > Taipan_TRS80-orig-list-missspace-indent-1line-fixed-2dig.txt
# It is easier to just modify the previous Perl command to accept two digit line numbers
# Note that the output filename "jumps" "fixed".
perl -p -e 's/\s(\d{2,5})\s\s/\n$1 /g' Taipan_TRS80-orig-list-missspace-indent-1line.txt > Taipan_TRS80-orig-list-missspace-indent-1line-fixed-2dig.txt
# Note that both of these commands (2 digit and 2-5 digit) add an extraneous line to the beginning of the code, due to a newline inserted before line 10, so trim with
sed '1d' 



# Tidy the 2 digit line numbers - remove second space, and preceding space (done above)
# and re-add striped out newline preceding two digit line number (done above)
# Filename: Taipan_TRS80-orig-missspace-indent-1line-fixed2.txt
# Duplicate longer lines removed
# Filename: Taipan_TRS80-orig-missspace-indent-1line-fixed3.txt

#
# As a one liner
#
sed '1,3d' Taipan_TRS80-orig.txt | sed '$d'|sed '$d'|sed '$d' | sed -E 's/^ ([0-9]{3,5}) ([a-zA-Z0-9]+)/ \1  \2/' | sed 's/^ \{5\}//' | tr -d '\n' | perl -p -e 's/\s(\d{2,5})\s\s/\n$1 /g' | sed '1d'


#
# To automate taipan
#

# D - destructive
# ND - non destructive (line can be deleted to revert change)
# Most edits are non-destructive

# Auto name of character - D
10120 VTAB10:HTAB7:PRINTCS$;T$;",":VTAB12:HTAB3:PRINT"What will you name your":VTAB 15:HTAB 13:& 45,22:VTAB 14:HTAB 7:PRINT "Firm: ";CA$;:& 32,27:VTAB14:HTAB13:WK$="ME":IF WK$ = "" THEN CALL2521:GOTO10120


# Auto name of character (better) - ND
10115 WK$="ME":GOTO 10130


# Auto game start type (1, 2) - D
10150 PRINT : PRINT : PRINT  TAB( 10);" ?";:CH$ = "12": CH%=2:MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0


# Auto game start type (1, 2) (better) - ND
10145 MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:MW = 10:GN = 5:BP = 7:GOTO 10180


# Automate business with money lender - ND
1305 GOTO 1500


# Automate no donation to temple
# There is no record of a string, partial or otherwise, of “Li Yuen asks … in donation to the temple of Tin Hau, the Sea Goddess. Will you pay?”
# This must be in machine code, called by CALL from the BASIC code, line ???
# Could be line 1060. In fact, lines 1040-1060, as 1040 is the conditional for LI not equal to zero (if zero then Li Yuen wants a donation?).

# (Possibly) Bypass being asked for a donation - ND
1035 GOTO 1120


# Automate no repair ship - ND
# Line 1120 seems to be the conditional, for lines 1120-1160, the repair code, bypass with
1125 GOTO 1210


# Auto upgrade - D
1630 CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300

# Auto upgrade (better as non-destructive) - ND
# But 1630 is still run and waits for input
1629 CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300

# Auto upgrade (even better) - ND
1629 CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300: GOTO 1700


# Auto extra gun - D
1720 WW = I: GOSUB 600: GOSUB 400: PRINT "Do you wish to buy a ship's gun": PRINT "for ";WW$;", ";T$;"? ";:CH$ = "NY": 

# Auto extra gun (better) - ND
1715 WW = I: GOTO 1730


# Automates Quit trading - D
# Note: 2700 Is the embarking routine, and is only called by 2528
2528 GOTO 2700

# Automates Quit trading - ND
2527 GOTO 2700

# Automates destination (2 or 7) - ND
3015 IF LO=7 OR LO =2 THEN D = ABS(LO-9):GOTO 3030
# and
3016 IFLO=1 THEN D=2:GOTO 3030
# or
3016 IFLO<>2 AND LO<>7 THEN D=2:GOTO 3030

# Auto fight - D
# However, this prevents orders being displayed
5180 GOTO 5300

# Auto fight (better) - ND
5605 W=198:GOTO 5620

# Auto run if no guns - D
# Action might not be displayed (as with auto fight)
5302 IF GN = 0 THEN  VTAB 4: HTAB 1: PRINT "We have no guns, ";T$;"!!":  GOTO 5200

# Auto run if no guns (better) - ND
5604 IF GN = 0 THEN  W=210:GOTO 5620

# Auto play again - D
2699 RUN 

# Auto play again - Less D
# Less destructive, but changes an existing line by appending RUN
2698 GOSUB 20000: RUN


# Log scores - ND
20005 PR#1
20195 PR#0


# Automate buy low - ND
2435 IF J=0 THEN W = MW:IF CA > W * CP THEN CA = CA - W * CP:ST(2,I) = ST(2,I) + W: MW = MW - W
2437 IF J=0 THEN IF CA < MW * CP THEN W = CA / CP :IF CA > W * CP THEN CA = CA - W * CP:ST(2,I) = ST(2,I) + W : MW = MW - W
# Better still
2435 IF J=0 AND CA >= MW * CP THEN W = MW : CA = CA - W * CP:ST(2,I) = ST(2,I) + W : MW = MW - W
2437 IF J=0 AND CA < MW * CP THEN W = CA / CP : CA = CA - W * CP:ST(2,I) = ST(2,I) + W : MW = MW - W

# Automate sell high - ND
2445 IF J=1  AND ST(2,I) THEN W = ST(2,I): CA = W * CP : ST(2,I) = 0: MW = MW + W

# Max guns - ND
3012 IF GN > MG THEN MG = GN
10143 MG = 0
29925 PRINT "Max guns: ";MC

# Max cash - ND
335 IF CA > MC THEN MC = CA
10144 MC = 0
29927 PRINT "Max cash: ";MC

# Max cash (better) - ND
335 IF CA > MC THEN MC = CA
10143 MG = 0: MC=0
29927 PRINT "Max cash: ";MC

# Hikes and crashes - ND
10144 DIM MM(2,4)
2432 IF J = 0 THEN MM(1,I) = CP(I)
2442 IF J = 1 THEN MM(2,I) = CP(I)
20029 FOR I = 1 TO 4: PRINT  TAB( 4); LEFT$ (CO$(I),7);"Min: ";MM(1,I); TAB( 18);"Max: ";MM(2,I): NEXT I

# Record of maximum number of pirates (to display at game end) - ND
5005 IF SN > MP THEN MP = SN
10143 MG=0:MC=0:MP=0
20028 PRINT "Max pirates: ";MP

# Auto bank half of the cash - when in Hong Kong - ND
1015 IF LO=1 THEN BA = BA + CA/2: CA = CA/2

#
# Records - ND
#

10143 DIM RE(2,4)
# or
10144 DIM RE(2,4,7) : DIM MM(2,4): DIM V(7)
# for compatibility
10144 DIM RE(2,7,4) : DIM MM(2,4): DIM V(7)
# Semi-Destructive
1010 IF D <  > 0 THEN  GOSUB 490: GOSUB 400:X =  USR (9): PRINT LO$(D): GOSUB 96:BA =  INT (BA + BA * .005):DW =  INT (DW + DW * .1):TI = TI + 1:MO = MO + 1:LO = D:V(LO)=V(LO)+1
# ND
1012 IF D <>0 THEN V(LO)=V(LO)+1
2516 FOR I=1 TO 4: IF CP(I)>RE(2,I) THEN RE(2,I)=CP(I)
2516 FOR I=1 TO 4: IF CP(I)>RE(2,I, LO) THEN RE(2,I, LO)=CP(I)
2517 IF CP(I)<RE(1,I) THEN RE(1,I)=CP(I)
2517 IF CP(I)<RE(1,I,LO) OR RE(1,I,LO)=0 THEN RE(1,I, LO)=CP(I)
2518 NEXT I
#20028 FOR I = 1 TO 4: PRINT  TAB( 4); LEFT$ (CO$(I),7);"Min: ";RE(1,I); TAB( 18);"Max: ";RE(2,I): NEXT I

2522 IF LO<>1 THEN X = USR(30):CH$="PBSQ"
2524 IF LO=1 AND I<1E6 THEN X=USR(31)+USR(32):CH$="PBSQTV"
2526 IF LO=1 AND I>1E6 THEN X=USR(31)+USR(33):CH$="PBSQTVR"
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2695: REM MISSING THE BANK GOTO 2680
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2680,2695
3000 REM


3595 REM RECORDS SUBROUTINE (600-721)
3600  PRINT FS$;HM$:HOME: INVERSE:PRINT A$;:NORMAL:PRINT "    RECORDS OF HIGH & LOW PRICES":INVERSE:PRINT A$;:NORMAL:PRINT:PRINT "    RECORDS BY P)ORT OR I)TEM? ": PRINT"    __________________________"

3601 VTAB 10: PRINT "    PRESS <SPACEBAR> WHEN FINISHED":PRINT: INVERSE: PRINT A$: NORMAL
3610 CH$="PI ":GOSUB 100:IF CH%=1 THEN GOSUB 3720: GOTO 3620
3611 IF CH% = 2 THEN PRINT: VTAB 5:PRINT A$;: PRINT A$: GOSUB 3660: GOTO 3670
3612 IF CH% = 3 THEN HOME: GOTO 2520
3612 IF CH% = 3 THEN HOME:GOSUB 200: GOSUB 300: GOTO2510

3620 CH$="1234567" : GOSUB 100 : X=CH%
3630 PRINT FS$;HM$:HOME:PRINT " ";LO$(X);" PRICES (VISITS:";V(X);")": INVERSE:PRINT " ITEM              HIGH         LOW     ";:NORMAL:FOR I = 1 TO 4:PRINT " ";CO$(I);:HTAB 21
3640 IF RE(2,I, X) = 0 THEN PRINT " ?";: HTAB 30:INVERSE: PRINT " ";: NORMAL: PRINT "   ?": NEXT I
3640 IF RE(2,I, X) = 0 THEN PRINT " ?";: HTAB 30:INVERSE: PRINT " ";: NORMAL: PRINT "   ?"
3641 IF RE(2,I, X) <> 0 THEN HTAB 21: PRINT RE(2,I,X);:HTAB 30: INVERSE: PRINT " ";: NORMAL: PRINT " ";RE(1,I,X): NEXT I
3641 IF RE(2,I, X) <> 0 THEN HTAB 21: PRINT RE(2,I,X);:HTAB 30: INVERSE: PRINT " ";: NORMAL: PRINT " ";RE(1,I,X)
3642 NEXT I
3650 INVERSE: PRINT A$:NORMAL: GOTO 3700
3660 VTAB 5:FOR I = 1 TO 4:PRINT " ";CO$(I),:NEXT I:PRINT:PRINT " WHAT ITEM (";TC$; "  ?": PRINT:PRINT A$: INVERSE: PRINT A$: NORMAL: CH$="OSAG":GOSUB 100: X1=CH%:  RETURN
3670 PRINT FS$;HM$:HOME:PRINT " ";CO$(X1);"  PRICES": INVERSE:PRINT " PORT      VISITS     HIGH    LOW      ";:NORMAL:FOR I = 1 TO 7:PRINT LO$(I);

3680 VTAB I+3: HTAB 12:PRINT V(I);:IF RE(1,X1,I) = 0 THEN HTAB 21: INVERSE: PRINT " ";: NORMAL:PRINT "  ?";: HTAB 32:PRINT "?":NEXT I:GOTO 3690
3681 IFRE(1,X1,I)<>0 THEN HTAB21: INVERSE:PRINT " ";:NORMAL:PRINT "  ";RE(2,X1,I) ;: HTAB 31:PRINT " ";RE(1,X1,I): NEXT I
3690 INVERSE: PRINT A$:NORMAL
3700 PRINT " PRESS <SPACEBAR> WHEN FINISHED";
3710 CH$=" ": GOSUB 100:IF CH% = 1 THEN 3600
3711 GOTO 3710
3715 REM PORT CHOICE SUBROUTINE (720)
3720 FORI=1TO7STEP2: VTAB (I / 2) + 4:PRINT A$:VTAB (I / 2) + 4: PRINT I;" ";LO$(I);: HTAB 20:PRINT I + 1;" ";LO$(I+1):NEXT I:PRINT
3720 PRINT FS$;HM$: FOR I=1 TO 7: VTAB (I) + 4:PRINT A$:VTAB (I) + 4: PRINT I;" ";LO$(I);:NEXT I:PRINT
3721 PRINT "       WHICH PORT (1-7)?             ": PRINT:INVERSE: PRINT A$: NORMAL: RETURN

# LINE NUMBER EQUIVALENTS? 260, 770 (770 calls are all REM'd out, anyway)



#
# For compatibility with book H(LOC,GOODS) and L(LOC,GOODS)
#

10144 DIM RE(2,7,4) : DIM MM(2,4): DIM V(7)
1012 IF D <>0 THEN V(LO)=V(LO)+1
2516 FOR I=1 TO 4: IF CP(I)>RE(2, LO,I) THEN RE(2, LO,I)=CP(I)
2517 IF CP(I)<RE(1,LO, I) OR RE(1,LO,I)=0 THEN RE(1, LO,I)=CP(I)
2518 NEXT I
2522 IF LO<>1 THEN X = USR(30):CH$="PBSQ"
2524 IF LO=1 AND I<1E6 THEN X=USR(31)+USR(32):CH$="PBSQTV"
2526 IF LO=1 AND I>1E6 THEN X=USR(31)+USR(33):CH$="PBSQTVR"
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2695: REM MISSING THE BANK GOTO 2680
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2680,2695
3000 REM

3595 REM RECORDS SUBROUTINE (600-721)
3600  PRINT FS$;HM$:HOME: INVERSE:PRINT A$;:NORMAL:PRINT "    RECORDS OF HIGH & LOW PRICES":INVERSE:PRINT A$;:NORMAL:PRINT:PRINT "    RECORDS BY P)ORT OR I)TEM? ": PRINT"    __________________________"
3601 VTAB 10: PRINT "    PRESS <SPACEBAR> WHEN FINISHED":PRINT: INVERSE: PRINT A$: NORMAL
3610 CH$="PI ":GOSUB 100:IF CH%=1 THEN GOSUB 3720: GOTO 3620
3611 IF CH% = 2 THEN PRINT: VTAB 5:PRINT A$;: PRINT A$: GOSUB 3660: GOTO 3670
3612 IF CH% = 3 THEN HOME:GOSUB 200: GOSUB 300: GOTO2510
3620 CH$="1234567" : GOSUB 100 : X=CH%
3630 PRINT FS$;HM$:HOME:PRINT " ";LO$(X);" PRICES (VISITS:";V(X);")": INVERSE:PRINT " ITEM              HIGH         LOW     ";:NORMAL:FOR I = 1 TO 4:PRINT " ";CO$(I);:HTAB 21
3640 IF RE(2, X,I) = 0 THEN PRINT " ?";: HTAB 30:INVERSE: PRINT " ";: NORMAL: PRINT "   ?"
3641 IF RE(2, X,I) <> 0 THEN HTAB 21: PRINT RE(2,X,I);:HTAB 30: INVERSE: PRINT " ";: NORMAL: PRINT " ";RE(1,X,I)
3642 NEXT I
3650 INVERSE: PRINT A$:NORMAL: GOTO 3700
3660 VTAB 5:FOR I = 1 TO 4:PRINT " ";CO$(I),:NEXT I:PRINT:PRINT " WHAT ITEM (";TC$; "  ?": PRINT:PRINT A$: INVERSE: PRINT A$: NORMAL:CH$="OSAG":GOSUB 100: X1=CH%:  RETURN
3670 PRINT FS$;HM$:HOME:PRINT " ";CO$(X1);"  PRICES": INVERSE:PRINT " PORT      VISITS     HIGH    LOW      ";:NORMAL:FOR I = 1 TO 7:PRINT LO$(I);
3680 VTAB I+3: HTAB 12:PRINT V(I);:IF RE(1,I,X1) = 0 THEN HTAB 21: INVERSE: PRINT " ";: NORMAL:PRINT "  ?";: HTAB 32:PRINT "?":NEXT I:GOTO 3690
3681 IFRE(1,I,X1)<>0 THEN HTAB21: INVERSE:PRINT " ";:NORMAL:PRINT "  ";RE(2,I,X1) ;: HTAB 31:PRINT " ";RE(1,I,X1): NEXT I
3690 INVERSE: PRINT A$:NORMAL
3700 PRINT " PRESS <SPACEBAR> WHEN FINISHED";
3710 CH$=" ": GOSUB 100:IF CH% = 1 THEN 3600
3711 GOTO 3710
3715 REM PORT CHOICE SUBROUTINE (720)
3720 FORI=1TO7STEP2: VTAB (I / 2) + 4:PRINT A$:VTAB (I / 2) + 4: PRINT I;" ";LO$(I);: HTAB 20:PRINT I + 1;" ";LO$(I+1):NEXT I:PRINT
3720 PRINT FS$;HM$: FOR I=1 TO 7: VTAB (I) + 4:PRINT A$:VTAB (I) + 4: PRINT I;" ";LO$(I);:NEXT I:PRINT
3721 PRINT "       WHICH PORT (1-7)?             ": PRINT:INVERSE: PRINT A$: NORMAL: RETURN



#
# For full compatibility with book - using H(LOC,GOODS) and L(LOC,GOODS)
#

10144 DIM H(7,4), L(7,4) : DIM MM(2,4): DIM V(7)
1012 IF D <>0 THEN V(LO)=V(LO)+1
2516 FOR I=1 TO 4: IF CP(I)>H(LO,I) THEN H( LO,I)=CP(I)
2517 IF CP(I)<L(LO, I) OR L(LO,I)=0 THEN L(LO,I)=CP(I)
2518 NEXT I
2522 IF LO<>1 THEN X = USR(30):CH$="PBSQ"
2524 IF LO=1 AND I<1E6 THEN X=USR(31)+USR(32):CH$="PBSQTV"
2526 IF LO=1 AND I>1E6 THEN X=USR(31)+USR(33):CH$="PBSQTVR"
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2695: REM MISSING THE BANK GOTO 2680
2528 GOSUB 100: ON CH% GOTO 3600,2530,2570,2700,2620,2680,2695

3000 REM

3595 REM RECORDS SUBROUTINE (600-721)
3600  PRINT FS$;HM$:HOME: INVERSE:PRINT A$;:NORMAL:PRINT "    RECORDS OF HIGH & LOW PRICES":INVERSE:PRINT A$;:NORMAL:PRINT:PRINT "    RECORDS BY P)ORT OR I)TEM? ": PRINT"    __________________________"
3601 VTAB 10: PRINT "    PRESS <SPACEBAR> WHEN FINISHED":PRINT: INVERSE: PRINT A$: NORMAL
3610 CH$="PI ":GOSUB 100:IF CH%=1 THEN GOSUB 3720: GOTO 3620
3611 IF CH% = 2 THEN PRINT: VTAB 5:PRINT A$;: PRINT A$: GOSUB 3660: GOTO 3670
3612 IF CH% = 3 THEN HOME:GOSUB 200: GOSUB 300: GOTO2510
3620 CH$="1234567" : GOSUB 100 : X=CH%
3630 PRINT FS$;HM$:HOME:PRINT " ";LO$(X);" PRICES (VISITS:";V(X);")": INVERSE:PRINT " ITEM              HIGH         LOW     ";:NORMAL:FOR I = 1 TO 4:PRINT " ";CO$(I);:HTAB 21
3640 IF H( X,I) = 0 THEN PRINT " ?";: HTAB 30:INVERSE: PRINT " ";: NORMAL: PRINT "   ?"
3641 IF H(X,I) <> 0 THEN HTAB 21: PRINT H(X,I);:HTAB 30: INVERSE: PRINT " ";: NORMAL: PRINT " ";L(X,I)
3642 NEXT I
3650 INVERSE: PRINT A$:NORMAL: GOTO 3700
3660 VTAB 5:FOR I = 1 TO 4:PRINT " ";CO$(I),:NEXT I:PRINT:PRINT " WHAT ITEM, ";T$; "?": PRINT:PRINT A$: INVERSE: PRINT A$: NORMAL: CH$="OSAG":GOSUB 100: X1=CH%: RETURN
3670 PRINT FS$;HM$:HOME:PRINT " ";CO$(X1);"  PRICES": INVERSE:PRINT " PORT      VISITS     HIGH    LOW      ";:NORMAL:FOR I = 1 TO 7:PRINT LO$(I);
3680 VTAB I+3: HTAB 12:PRINT V(I);:IF L(I,X1) = 0 THEN HTAB 21: INVERSE: PRINT " ";: NORMAL:PRINT "  ?";: HTAB 32:PRINT "?":NEXT I:GOTO 3690
3681 IFL(I,X1)<>0 THEN HTAB21: INVERSE:PRINT " ";:NORMAL:PRINT "  ";H(I,X1) ;: HTAB 31:PRINT " ";L(I,X1): NEXT I
3690 INVERSE: PRINT A$:NORMAL
3700 PRINT " PRESS <SPACEBAR> WHEN FINISHED";
3710 CH$=" ": GOSUB 100:IF CH% = 1 THEN 3600
3711 GOTO 3710
3715 REM PORT CHOICE SUBROUTINE (720)
3720 FORI=1TO7STEP2: VTAB (I / 2) + 4:PRINT A$:VTAB (I / 2) + 4: PRINT I;" ";LO$(I);: HTAB 20:PRINT I + 1;" ";LO$(I+1):NEXT I:PRINT
3720 PRINT FS$;HM$: FOR I=1 TO 7: VTAB (I) + 4:PRINT A$:VTAB (I) + 4: PRINT I;" ";LO$(I);:NEXT I:PRINT
3721 PRINT "       WHICH PORT (1-7)?             ": PRINT:INVERSE: PRINT A$: NORMAL: RETURN

#
# Single key press - which item and which port
#
# Subsequent edits
#

3610 GOSUB 5685:IF W=208 THEN GOSUB 3720: GOTO 3620
3611 IF W = 201 THEN PRINT: VTAB 5:PRINT A$;: PRINT A$: GOSUB 3660: GOTO 3670
3612 IF W = 160 THEN HOME:GOSUB 200: GOSUB 300: GOTO2510
3613 GOTO 3610

3620  GOSUB 5696

3660 VTAB 5:FOR I = 1 TO 4:PRINT " ";CO$(I),:NEXT I:PRINT:PRINT " WHAT ITEM, ";T$; "?": PRINT:PRINT A$: INVERSE: PRINT A$: NORMAL:GOSUB 5690: RETURN

3710 GOSUB 5685:IF W = 160 THEN 3600


5685 REM WHICH KEY 
5686 VTAB 2: HTAB 21: FOR II = 1 TO T / 2 
5687 W = PEEK ( - 16384): IF W < 128 THEN NEXT II: PRINT : GOTO 5686 
5688 POKE - 16368,0: PRINT :RETURN[/code]

5690 REM WHICH ITEM?
5691 GOSUB 5686
5691 IF W = 206 THEN X1 = 1:GOTO 5696
5692 IF W = 211 THEN X1 = 2:GOTO 5696
5693 IF W = 193 THEN X1 = 3:GOTO 5696
5694 IF W = 199 THEN X1 = 4:GOTO 5696
5695 CALL 2524: GOTO 5690
5696 RETURN

5690 REM WHICH ITEM?
5691 GOSUB 5686
5691 IF W = 206 THEN X1 = 1:RETURN
5692 IF W = 211 THEN X1 = 2: RETURN
5693 IF W = 193 THEN X1 = 3: RETURN
5694 IF W = 199 THEN X1 = 4: RETURN
5695 CALL 2524: GOTO 5690



5696 REM WHICH PORT (1-7)? Not (0-9)
5697 GOSUB 5686
5698 IF W < 176 OR W > 185 THEN CALL 2524: GOTO 5697
5698 IF W < 177 OR W > 183 THEN CALL 2524: GOTO 5697
5699 X = W - 176 : RETURN
5699 X = W - 177 : RETURN

#
# Single key press - which item and which port (end)
#




#
# Records (End)
#

#
# Parley (SD) (Begin)
#

5645 IF W = 208 THEN CMD = 4: PRINT "Parley     "
5180 ON CMD GOTO 5200,5300,5400,6000

6000 REM PARLEY
6090 GOTO 5500 *like line 5500? [Ed. - What does that even mean? Do you mean like RETURN, or similar to line 5500*][Ed2. - I think it was an initial suggestion in a comment and then later added as the command as well, thereby making the comment redundant]

6000 REM
6010 IF RND (1) < .8 THEN VTAB 4: HTAB 1: PRINT CL$:VTAB 4:PRINT " They refuse to parley, ";T$;"    ":GOSUB 96:VTAB 4:HTAB 1:PRINT CL$:GOTO 5500
6010 IF RND (1) < .8 THEN VTAB 4: HTAB 1: PRINT CL$:VTAB 4:PRINT "They refuse to parley, ";T$;"    ":GOSUB 96:GOTO 5500
6020  VTAB 4:PRINT "They agree to discuss terms.      ":GOSUB 96
6030 IF SN > GN / 2 OR RND (1) > .7 THEN VTAB 4:PRINT "They offer to let us go in exchange for": VTAB 5: PRINT "all our cash. Do we accept, ";T$;" (Y/N)"; : GOTO 6050
6040 GOTO 6090
6050 CH$="YN" :GOSUB 100:VTAB 4: PRINT CL$:VTAB 5: PRINT CL$:IF CH% = 1 THEN IF RND (1) > .2 AND CA> 100 + INT ( RND (1) * 2000) THEN SN = 0: CA = 0: VTAB 4: PRINT "They took it & ran!": GOSUB 92: GOTO 6140
6060 IF CH% = 2 THEN 5560
6070 CA = 0:VTAB 4:PRINT "They still intend to fight!":PRINT:PRINT A$;:GOSUB 94
6080 GOSUB 94:GOTO 5560
6090  VTAB 4:HTAB 1:PRINT SFL$ ;:VTAB 4:PRINT "They offer to surrender. ":GOSUB 92:VTAB 4:PRINT "Do we let them give up (Y/N)?  ":CH$="YN" : GOSUB 100 : IF CH% = 2 THEN 6110
6100 GOTO 5360
6110 IF RND (1) > .7 THEN VTAB 4:PRINT "They're preparing to attack! ":GOSUB 92:GOTO 5560
6120 REM CAPTURE (1270-1251)
6130 REM VTAB 4:PRINT " We've captured a bigger ship!":CALL 2521:GOSUB 92:VTAB 4:PRINT " WE'RE TRANSFERRING TO IT NOW.":GOSUB 92:GN = GN + INT ( RND (1) * (GN + 1)) + 1:E = SC + INT ( RND (1) * (SC + 150)) + 1:SC = SC + E:MW = MW + E:SN = 0
6140 OK=1:GOTO 5900

#
# Parley with single key press
#
# Redundant, use the shorter, more generic, subroutine below
#

5671 VTAB 2: HTAB 21: FOR II = 1 TO T / 3
5672 W =  PEEK ( - 16384): IF W < 128 THEN  NEXT II: PRINT : RETURN 
5673 IF W = 217 THEN CMD = 1: PRINT "Yes        "
5674 IF W = 206 THEN CMD = 2: PRINT "No         "
5675 POKE  - 16368,0: PRINT :RETURN

6050 GOSUB 5671:VTAB 4: PRINT CL$:VTAB 5: PRINT CL$:IF CMD = 1 THEN IF RND (1) > .2 AND CA> 100 + INT ( RND (1) * 2000) THEN SN = 0: CA = 0: VTAB 4: PRINT "They took it & ran!": GOSUB 92: GOTO 6140
6060 IF CMD = 2 THEN 5560

# Note: Do not use CMD as this affects the battle instructions, use CYN, or something. 


#
# Parley with single key press
#
# More generic - just return W, and a bit more patient (/2 not T/3)
# Y = 217, N = 206
# Also, a better exit for line 6050, without booty, for "They took it and ran"
# GOTO 5900 (with OK=3) instead of GOTO 6140
# Fixed padding spaces on the two strings
#

5671 VTAB 2: HTAB 21: FOR II = 1 TO T / 2
5672 W =  PEEK ( - 16384): IF W < 128 THEN  NEXT II: PRINT : RETURN 
5675 POKE  - 16368,0: PRINT :RETURN

6050 GOSUB 5671:VTAB 4: PRINT CL$:VTAB 5: PRINT CL$:IF W=217 THEN IF RND (1) > .2 AND CA> 100 + INT ( RND (1) * 2000) THEN SN = 0: CA = 0: VTAB 4: PRINT "They took it & ran!          ": GOSUB 94: OK = 3: GOTO 5900
6060 IF W=206 THEN 5560
6090  VTAB 4:HTAB 1:PRINT SFL$ ;:VTAB 4:PRINT "They offer to surrender.     ":GOSUB 96:VTAB 4:PRINT "Do we let them give up (Y/N)?":GOSUB 5671: IF W=217 THEN 6110


#
# Parley (SD) Summary
#

5645 IF W = 208 THEN CMD = 4: PRINT "Parley     "

5671 VTAB 2: HTAB 21: FOR II = 1 TO T / 2
5672 W =  PEEK ( - 16384): IF W < 128 THEN  NEXT II: PRINT : RETURN 
5675 POKE  - 16368,0: PRINT :RETURN

5180 ON CMD GOTO 5200,5300,5400,6000

6000 REM
6010 IF RND (1) < .8 THEN VTAB 4: HTAB 1: PRINT CL$:VTAB 4:PRINT "They refuse to parley, ";T$:GOSUB 96:GOTO 5500
6020  VTAB 4:PRINT "They agree to discuss terms. ":GOSUB 96
6030 IF SN > GN / 2 OR RND (1) > .7 THEN VTAB 4:PRINT "They offer to let us go in exchange for": VTAB 5: PRINT "all our cash. Do we accept, ";T$;" (Y/N)"; : GOTO 6050
6040 GOTO 6090
6050 GOSUB 5671:VTAB 4: PRINT CL$:VTAB 5: PRINT CL$:IF W=217 THEN IF RND (1) > .2 AND CA> 100 + INT ( RND (1) * 2000) THEN SN = 0: CA = 0: VTAB 4: PRINT "They took it & ran!          ": GOSUB 94: OK = 3: GOTO 5900
6060 IF W=206 THEN 5560
6070 CA = 0:VTAB 4:PRINT "They still intend to fight!  ":GOSUB 96
6080 GOSUB 94:GOTO 5560
6090 VTAB 4:HTAB 1:PRINT "They offer to surrender.     ":GOSUB 96:VTAB 4:HTAB1:PRINT "Do we let them give up (Y/N)?":GOSUB 5671: VTAB 4:  HTAB1: PRINT CL$:IF W=217 THEN 6110
6100 GOTO 5360
6110 IF RND (1) > .7 THEN VTAB 4:PRINT "They're preparing to attack! ":GOSUB 96:GOTO 5560
6120 REM CAPTURE (1270-1251)
6130 REM VTAB 4:PRINT "We've captured a bigger ship!":CALL 2521:GOSUB 92:VTAB 4:PRINT "We're transferring to it now.":GOSUB 92:GN = GN + INT ( RND (1) * (GN + 1)) + 1:E = SC + INT ( RND (1) * (SC + 150)) + 1:SC = SC + E:MW = MW + E:SN = 0
6140 OK=1:GOTO 5900



#
# Parley (SD) Summary - more responsive to single key press
#
# Replace GOSUB 96 with GOSUB 5600 in lines 6010, 6070, 6110
# Remove excess GOSUB 94 in 6080
# Amalgamate 6080 into 6070 and delete 6080 as excess to requirements
# 6080 is never called
# Fixed bug in line 6060: Is there a sticky Y key to "Do you wish to surrender?" Press it once, then next time don't.
# Both times you'll get a "They still intend to fight" message.
#     6060 IF W=206 THEN 5560
# Should be 
#     6060 IF W<>217 THEN 5560
# Like the book.
# Remove the CLS and VTAB from line 6010, not required
# Reduce delay in line 6050
#

5645 IF W = 208 THEN CMD = 4: PRINT "Parley     "

5671 VTAB 2: HTAB 21: FOR II = 1 TO T / 2
5672 W =  PEEK ( - 16384): IF W < 128 THEN  NEXT II: PRINT : RETURN 
5675 POKE  - 16368,0: PRINT :RETURN

5180 ON CMD GOTO 5200,5300,5400,6000

6000 REM
6010 IF RND (1) < .8 THEN VTAB 4: HTAB 1: PRINT "They refuse to parley, ";T$:GOSUB 5600:GOTO 5500
6020  VTAB 4:PRINT "They agree to discuss terms. ":GOSUB 96
6030 IF SN > GN / 2 OR RND (1) > .7 THEN VTAB 4:PRINT "They offer to let us go in exchange for": VTAB 5: PRINT "all our cash. Do we accept, ";T$;" (Y/N)"; : GOTO 6050
6040 GOTO 6090
6050 GOSUB 5671:VTAB 4: PRINT CL$:VTAB 5: PRINT CL$:IF W=217 THEN IF RND (1) > .2 AND CA> 100 + INT ( RND (1) * 2000) THEN SN = 0: CA = 0: VTAB 4: PRINT "They took it & ran!          ": GOSUB 96: OK = 3: GOTO 5900
6060 IF W<>217 THEN 5560
6070 CA = 0:VTAB 4:PRINT "They still intend to fight!  ":GOSUB 5600: GOTO 5560
6090 VTAB 4:HTAB 1:PRINT "They offer to surrender.     ":VTAB 5:HTAB1:PRINT "Do we let them give up (Y/N)?":GOSUB 5671: VTAB 4: HTAB1: PRINT CL$:VTAB 5: HTAB1: PRINT CL$:IF W=217 THEN 6110
6100 GOTO 5360
6110 IF RND (1) > .7 THEN VTAB 4:PRINT "They're preparing to attack! ":GOSUB 5600:GOTO 5560
6120 REM CAPTURE (1270-1251)
6130 REM VTAB 4:PRINT "We've captured a bigger ship!":CALL 2521:GOSUB 92:VTAB 4:PRINT "We're transferring to it now.":GOSUB 92:GN = GN + INT ( RND (1) * (GN + 1)) + 1:E = SC + INT ( RND (1) * (SC + 150)) + 1:SC = SC + E:MW = MW + E:SN = 0
6140 OK=1:GOTO 5900

#
# Parley (SD) (End)
#

#
# Hacks for testing
#

# Always pirates (D)

# Delete 3110 or 3210
# Do we need to delete both?
3110 REM IF  FN R(BP) THEN 3200
# Note that changing line 3210 will make the game very difficult, as you will always have to face Li Yuen. It is better just to have the "normal" pirates each turn
3210 REM IF  FN R(4 + 8 * LI) THEN 3300


# Always offered new gun (D)
# Assuming that you have the necessary cash
1710 I =  INT ( FN R(1000 * (TI + 5) / 6) + 500): IF CA < I THEN 1900

# Always get extra gun
# In addition to line 1710 above,
1715 WW = I: GOSUB 600: GOSUB 400: PRINT "Do you wish to buy a ship's gun": PRINT "for ";WW$;", ";T$;"? ";:GOTO 1730

# Always offered ship upgrade (D)
# Assuming that you have the necessary cash
1610 I =  INT (1000 +  FN R(1000 * (TI + 5) / 6)) * ( INT (SC / 50) * (DM > 0) + 1): IF CA < I THEN 1700

# Always get ship upgrade (ND)
# In addition to line 1610 above,
1625 CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300: GOTO 1700

# Pirates never hit a gun (D)
5550 REM IF GN THEN  IF  FN R(100) < (DM / SC) * 100 OR (DM / SC) * 100 > 80 THEN I = 1: GOSUB 5600: VTAB 4: PRINT CL$: VTAB 4: PRINT "The buggers hit a gun, ";T$;"!!": CALL 2512:GN = GN - 1:MW = MW + 10: GOSUB 5600: VTAB 4: PRINT CL$

# Always Fight (ND)
# Same as self-play hack
5605 W=198:GOTO 5620

# Hacked game notes
# 33 guns gives you 15 sunk
# 36 gives 20
# 42 gives 15-20
# 49 20-22
# 51 16
# 53 18-21
# 55 20 23 
# 59 20-26
# 60 20-25
# 61 23-28
# 67 23-27
# 69 24-27
# 70 24-27
# 71 24-27
# 78 24-29
# 80 23-30
# 81 22-29
# 84 27-31
# 87 23-31
# 88 21-31
# 89 22-31
# 90 26-30
# 91 25-30
# 96 26-31
# 97 25-32
# 98 24-31
# 99
# 100
# 101 28-31
# 100 guns gives you 30+ sunk
# There is a drop off at around 50+?
# Note that the amount of pirates that run away also increases dramatically, often double the sunk, and isn't accounted for, above.

# BLOG:
# Differences twixt HiRes game and book
# All "A" does not buy all you can hold, instead it annoyingly buys all you can afford, thereby, inevitably, over filling the hold. Useless. You have to type in the amount each time, which is tedious. Is the book the same? I don't think so

#
# Hacks for testing (end)
#


#
# More guns
#

# More guns (ND) - not working due to previous ND hack 10145 which skips these lines
10175 GN = 4
10175 GN = 6
10175 GN = 6:MW=0
10175 GN = 10:MW = 100: SC=100
10175 GN = 100: MW=1000:SC=1000
# Sort of works (ND):
10145 MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:MW = 10:GN = 50:BP = 7:GOTO 10180
However, a weird unbalance occurs. You shouldn't be able to buy new gun until ship hold is 500. However, the guns increased in number almost straight from the start...
So here is a bug in the calculation of if can support a new gun, or is it due to the MW being incorrect and should be 0?
Hold-Guns
10-50
50-51
40-52
30-53
40/90-52
70-54
120-54
110-55
100-56
140-57
150-56

and

270-54
260-55
250-56
290-57
330-58
370-59
410/460-60
470-59
480-63
490-62
4??-64
500/550-61
540-62

# The initial conditions (SX, MW and GN) need to be correct and accurate 
# as there are no further checks  to their ratios made.
# A more correct line would be to set MW to 0 (ND)

10145 MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:MW = 0:GN = 50:BP = 7:GOTO 10180

# This stops guns purchase until ship is upgraded and have MW>=0. 
# However, the SC will always be incorrect (too small for the total weight of guns)

# The totally correct way is to state GN and MW and then, finally, calculate SC in line 10171 (from 10150) 
# Destructive hack (D)
10150 PRINT : PRINT : PRINT  TAB( 10);" ?";:CH$ = "12": GOSUB 100:MO = 1:YE = 1860:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0
10160 IF CH% = 1 THEN DW = 5000:CA = 400:MW = 60:GN = 0:BP = 10
10170 IF CH% = 2 THEN DW = 0:CA = 0:MW = 10:GN = 5:BP = 7
10171 SC=MW+GN*10

# or do the same calculation of SC the "self playing" hack of line 10145 (ND)
10145 MO = 1:YE = 1860:GN=50 : MW= 10:SC = 10*GN+MW:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:BP = 7:GOTO 10180

#
# BASIC mod for SC/MW/GN consistency
#

# The BASIC check is on the MW and not the SC. If there is a MW>=10 then you can still buy another gun. Maybe add a check at purchase time for additional overburdening

# Need to check for goods carried too?
# 
# Method 1: Adjust MW
#
IF SC < MW + GN*10 THEN PRINT "Ship is over burdened"
REM Attempt to fix MW?
REM MW=SC-GN*10
REM Just notify user
REM IF MW<0 THEN OV=-MW/10: MV = 0 : PRINT OV;" guns too many"
REM Fix the guns too, by throwing overboard
REM IF MW<0 THEN OV=-MW/10: MV = 0 : PRINT OV;" guns too manny - thrown overboard" :  GN = GN - OV
#
# Method 2: Toss the excess guns, ignore MW (could set to zero)
#
IF SC < GN*10 THEN PRINT "Ship has too many guns"
REM Calculate the guns weight only
REM OV = SC-GN*10 
REM Just notify user
REM IF OV < 0 THEN OV =-OV/10: PRINT OV;" guns too many"
REM Fix the guns too, by throwing overboard
REM IF OV < 0 THEN OV =-OV/10: PRINT OV;" guns too many - thrown overboard" :  GN = GN - OV

# However, if the SC is set correctly at initialisation then this extra complexity really isn't required!

#
# Additional notes:
#
# DEF FN lines
#
# 10020 DEF  FN R(X) =  INT ( USR (0) * X)
#
#
# Lines - USR(x)
#
# 230 USR(1) + USR(2)
# ...
# 1060 - USR(10) and USR(11)
# 1070 USR(12) and USR(13)
# 1080 USR(14)
# 1090 USR(15)
# 1130 USR(16)
# 1145 USR(17) and USR(18)
# 1150 USR(19)
# 1155 USR(12)
# 1230 USR(20)
# 1240 USR(21)
# 1310 USR(22)
# 1370 USR(23)
# 1400 USR(24)
# ...
# 2522 USR(30)               # Port menu
# 2524 USR(31) and USR(32)   # Port menu
# 2526 USR(31) and USR(33)   # Port menu
# 10060 USR(0)
# 10062 USR(0)

#
# Program structure
#

# 10-99 - 
# 92-98 (S) - Staggered Delay interruptible by keypress
# 92 - 2xT
# 94 - 1xT
# 96 - T/2
# 98 - Clear key press
# 100 (S) - call routine get predefined input (BSQ, and YN or the contents of CH$)
# 150 - 
# 200-270 (S) - Main display - Top panel Empty (labels and outline, no date)
# 210 - Top line ("Firm")
# 220 - Draw table outline???
# 230 - top table (warehouse???) (Titles: In use/Hold/Guns)
# 240 - Hold Table
# 250 - Righthand panel (date, ship status) 
# 300-360 (S) - Top panel Data
# 310  Print date
# 400/410 - Poke routine: Screen port set (to lower port). Where is it set to the upper port???
# 480 - USR routine??? 
# 490  - USR routine???
# 500-590 bank/cash???
# 600-690 Big number routine
# 1000-  Port arrival?
# 1020 - Year end - financial and date adjustments
# 1030 - Check for Hong Kong
# 1040 - Hong Kong port arrival stuff
# 1040-1065 Li Yuen
# 1070-1090 Money Lender?
# 1100 (F) - More port arrival stuff
# 1120-1160 - Repair
# 1600-1630 - Upgrade ship
# 1610 - conditional for upgrade ship
# 1700-1740 - Extra gun
# 1710 - conditional for new gun
# 1900-1910 - ???
# 2000- - ???
# 2030 - ???
# 2100 - ???
# 2310-2330 - Li Yuen activity
# 2410-2450 - Hike/crash
# 2500-2600 - Port 
# 2500 - Port
# 2501 Robbed
# 2510 Adjust display for lower port (valid entry point)
# 2515 Goods price display
# 2520 Port menu entry point (yet another valid point? Earlier could be better)
# 2522-2528 Port menu 
# 2530 (F) Buy
# 2570 (F) Sell
# 2620 (F) Transport to storage
# 2680 (F) Visit bank
# 2695 (F) Retire (millionaire???)
# 2700 (F) Embark
3100-3120 - Pirates approaching
3110 - Decides if pirates attack
3200-3230 - Li Yuen pirates approaching
3210 - Decides if Li Yuen attacks
3300-3350 - Storm
5000- - Pirate fight
5000-5080 - 
5050 - Ship status
5090
5090-5190
5165 - Did we lose?                (OK=0)
5180 - Pirates - jump on action
5200 (F) - Pirates - run
5210 - Did we get away?            (OK=3)
5300 (F) - Pirates - fight
5310 We fire on pirates
5360 - Some ran away
5400 (F) - Pirates - Throw
5500-5590 (F) - End of battle round & calculations
5505 - Did we win?                 (OK=1)
5510 (F) - Pirates fire on us
5560 - Did Li Yuen drive them off? (OK=2)
5600-5670 (S) - Handle battle input (Run, Fight, Throw)
5600-5610 - Get key press
5700-5740 (S) -  Cycle through ten ships (doing  what exactly???, SS, SA, AM% FN R(EC))
5700 (S) - (called from 5100)
5750-5770 (S) - Print space adjusted number of guns and ships (called from 5100)
5760 (S) - Print space adjusted number of guns and ships (called from 5100)
5800 (S) - Print ship (SH - top?)
5820 (S) - Print ship (SB - bottom?)
5840 (S) - Do a ship flash and animation
5860 (S) - Poke at X,Y related location (what for?)
5880 (S) - Calc X and Y for printing ships in battle
5900 (F) - End of battle (we may have lost or won) (OK set?)
5910 - We lost                     (OK=0)
5920 - We won                      (OK=1)
5930 - Li Yuen drove them off      (OK=2)
5940 - We made it                  (OK=3)
10000 - Start of game
10120 - Name of character 
10140 - type of game
10150 - Variable initialisation

#
# Missing strings
#

# Do they correlate with USR(x)???
#
# Note some of the text printed is missing :
#  - repair
#  - wu/money lender
#  - Yuen/donation


Comprador's report
Captains report
Li Yuen asks xxx in donation to the temple of Tin Tau, the Sea Goddess. Will you pay?
Li Yuen has sent a lieutenant, Taipan. He says his admiral wishes to see you in Hong Kong, posthaste!
"visit":
 - Visit bank
What do you wish to do? Buy/Sell/Quit etc.
Repair ship related to USR(16-19) and USR(12)? lines 1120-1160
Taipan, Mc Henry from the Hong Kong Shipyards has arrived! He says, "I see ye've a wee bit of damage to yer ship. Will ye be wanting repairs?"
Do you have business with Elder Brother Wu, the moneylender? 

#
# Small reused strings set in line 10040
#

10040 HM$ =  CHR$ (16):CS$ =  CHR$ (1) + "0":CA$ =  CHR$ (1) + "1":CG$ =  CHR$ (1) + "2":BD$ =  CHR$ (2):CD$ =  CHR$ (3):DD$ =  CHR$ (4):IV$ =  CHR$ (9):NV$ =  CHR$ (14):FS$ =  CHR$ (25):CE$ =  CHR$ (6):CL$ =  CHR$ (5)

 - FS$ and HM$ together clear the screen
 - CLS clears a line
 
# Characters

from appl2.org/faq/FAQ.applesoft.html
0 - NULL
1 ctrl-A does nothing 
2 BD$
3 CD$
4 ctrl-D DD$
5 CL$
6 CE$
7 BELL
9 IV$
14 NV$
16 HM$
25 FS$


#
# Delay:
#
# Likely candidates:
# GOSUB 95 (5920), CALL 2518 (5920),2512 (elsewhere), CALL 2521 (3320), GOSUB 94 (3320) 94 (2330)
#
# Actual culprit
# GOSUB 92-98 (2T, T, T/2)

#
# CALL
#
# Including sound.
#
#
# 53 total
#
# -958
# 2200 General input (put into WK$ (partially?))
# 2224 Ship sink
# 2368 Ship flash??? And damage animation???
# 2512 Sound (four beeps)
# 2518 Sound (three beeps)
# 2521 Sound (two beeps)
# 2524 Sound (one simple beep)
# 2560 Selective input ("QBS"/"YN"/ETC. or contents of CH$)
# 2680 Numeric input (put into WK$ apparently, see line 150)
# 6147 ? (`0x1803`) Set input/output???


#
# POKES
# 35 total
#
# Examples:
#
# 98 POKE -16368,0 Clear key press
# 320 POKE 33 Width of text window
# 410 POKE 32-35 Margins: left margin, width of text, top margin, bottom margin
# 5540 POKE -16297 - -16300 HiRes, LoRes, HiRes1->2, HiRes 2->1
# 5840 POKE 2493,(Y + 4) * 8 - 1: POKE 2494,X - 1: ????
# 5860 POKE 2361,(Y + 4) * 8 - 1: POKE 2362,X - 1: POKE 2300, FN R( FN R(192)) ????
# 10010 POKE 1013,76: POKE 1014,224: POKE 1015,9:  Ampersand vector to what? POKE?
POKE 10,76: POKE 11,16: POKE 12,11: Poking USR jump instructions
POKE 1010,102: POKE 1011,213: POKE 1012,112 Makes RESET RUN
# 10070 POKE 2367,236   A flag?
#
# Locations:
#
# -16368 - Clear key press
# -16304 - Soft (display) switches - Shows graphics screen
# -16303 - Soft (display) switches - Shows text screen
# -16302 - Soft (display) switches - Full screen graphics - no text
# -16301 - Soft (display) switches - Allows graphics and 4 lines of text
# -16300 - Soft (display) switches - Switch from high-res page 2 to page 1
# -16299 - Soft (display) switches - Switch from high-res page 1 to page 2
# -16298 - Soft (display) switches - Lo-res
# -16297 - Soft (display) switches - Hi-res
# 10 - Poking USR jump instructions???
# 11 - Poking USR jump instructions???
# 12 - Poking USR jump instructions???
# 32 - left margin
# 33 - Width of text window
# 34 - top margin
# 35 - bottom margin
# 1010 - Makes RESET RUN
# 1011 - Makes RESET RUN
# 1012 - Makes RESET RUN
# 1013 - Set Ampersand vector to what? POKE?
# 1014 - Set Ampersand vector to what? POKE?
# 1015 - Set Ampersand vector to what? POKE?
# 2300
# 2361
# 2362
# 2367 -  A flag?
# 2493
# 2494

Sources: 

 - [The Big PEEKs, POKEs, and CALLs List](https://gswv.apple2.org.za/USA2WUG/FOUNDING.MEMBERS/HOME.PAGES/EDHEL/texts/pokes.html)
 - [PEEKS, POKES, CALLS AND PROGRAMMING NOTES](https://mirrors.apple2.org.za/ground.icaen.uiowa.edu/Collections/1WSW/MEGA.PEEKS.AND.POKES.html)


#
# & (Set to POKE in line 10010?)
# 12 total
#
# Examples:
#
# 10110 VTAB 8: HTAB 1: PRINT CG$;"[";: & 45,38: PRINT "]";: FOR I = 1 TO 8: PRINT "!"; TAB( 40);"!";: NEXT I: PRINT "<";: & 58,38: PRINT ">";CS$
# 10120 & 45,22: Last lo-res VLIN bottom endpoint
# 10120 & 32,27: 
# 10120 POKE 33,39: CALL 2200 POKE 33,40
# 10130 IF  LEN (WK$) > 22 THEN  PRINT : VTAB 18: PRINT IV$;: & 32,42: PRINT "Please limit your Firm's name to 22     characters or less.";: & 32,59:
# 20040 VTAB 14: PRINT "Your Rating:": PRINT CG$;"[";: & 45,31: PRINT "]": FOR I = 1 TO 5: PRINT "!";: HTAB 33: PRINT "!": NEXT I: PRINT "<";: & 58,31: PRINT ">";CS$: VTAB 16
# 220 VTAB 2: PRINT CG$;"[";: & 45,26: PRINT "]": FOR II = 1 TO 5: PRINT "!"; TAB( 28);"!": NEXT II: PRINT "(";: & 61,26: PRINT ")": FOR II = 1 TO 5: PRINT "!"; TAB( 28);"!": NEXT II: PRINT "<";: & 58,26: PRINT ">";CS$
# 260 VTAB 16: HTAB 1: PRINT CG$;: & 45,40: PRINT CS$
#
# Locations:
#
# 32 - 
# 33 - 
# 45 - Last lo-res VLIN bottom endpoint
# 58 - 
# 61 - 


#
# PEEKS
# 9 total
#
# 92 PEEK ( - 16384) Check for key press
# 94 PEEK ( - 16384) Check for key press
# 96 PEEK ( - 16384) Check for key press
# 314 PEEK(36)  Horizontal cursor position
# 5610 W =  PEEK ( - 16384) Check for key press
# 10045 IF  PEEK (2367) = 236  A flag?

#
# Self Playing Hack
#
# BASIC code only
#

1035 GOTO 1120
1125 GOTO 1210
1305 GOTO 1500
1629 CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300: GOTO 1700
1715 WW = I: GOTO 1730
2527 GOTO 2700
2699 RUN 
3015 IF LO = 7 OR LO = 2 THEN D = ABS(LO-9):GOTO 3030
3016 IF LO <> 2 AND LO <> 7 THEN D=2:GOTO 3030
5604 IF GN = 0 THEN  W=210:GOTO 5620
5605 W=198:GOTO 5620
20005 PR#1
20195 PR#0
10115 WK$="ME":GOTO 10130
10145 MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:MW = 10:GN = 5:BP = 7:GOTO 10180

#
# Self Playing Hack
#
# BASIC code only (End)
#



#
# Switchable self play
#

# Make self playing turn on and off, with a single key press ('S' for self play) in the pirate battle? Set, or rather toggle, a flag FS,
                                         
5646 IF W = ASC("S") THEN OLDCMD = CMD: CMD = 5: PRINT "Self play  "
5180 ON CMD GOTO 5200,5300,5400,6000, 5690
5690 CMD=OLDCMD:FS=ABS(FS-1)

# Or just ignore the CMD and preserve the previous command (better)
5646 IF W = ASC("S") THEN FS=ABS(FS-1): PRINT "Self play  " # not work
# However, for some reason ASC("S) gives 85 and not 211
5646 IF W = 211 THEN FS=ABS(FS-1): PRINT "Self play  "

# Don't forget to init the flag if you wish default ON at the start - but system default it is set to zero, i.e. off. Init where, non destructively? 10115 or 10145...
# Not a good solution, see below
10115 WK$="ME":FS=1:GOTO 10130  # not good

# Then prefix the lines above with

IF FS THEN ...

# Like so

1035 IF FS THEN GOTO 1120
1125 IF FS THEN GOTO 1210
1305 IF FS THEN GOTO 1500
1629 IF FS THEN CA = CA - I:MW = MW + 50:SC = SC + 50:DM = 0: GOSUB 300: GOTO 1700
1715 IF FS THEN WW = I: GOTO 1730
2527 IF FS THEN GOTO 2700
2699 IF FS THEN RUN 
3015 IF FS THEN IF LO=7 OR LO =2 THEN D = ABS(LO-9):GOTO 3030
3016 IF FS THEN IFLO<>2 AND LO<>7 THEN D=2:GOTO 3030
5604 IF FS THEN IF GN = 0 THEN  W=210:GOTO 5620
5605 IF FS THEN W=198:GOTO 5620
20005 IF FS THEN PR#1
20195 IF FS THEN PR#0
10115 IF FS THEN WK$="ME":GOTO 10130
10145 IF FS THEN MO = 1:YE = 1860:SC = 60:BA = 0:LO = 1:TI = 1:WC = 10000:WS = 0:DW = 0:CA = 0:MW = 10:GN = 5:BP = 7:GOTO 10180



# However, FS will reset each game play, so it will not work over a subsequent game or multiple games.
# Also, if FS is not set, in line 10115, 
10115 WK$="ME":FS=1:GOTO 10130
# Then 10145 will not run, therefore the 1,2 option is not skipped.
# This makes little sense due to logic
10115 IF FS THEN WK$="ME":FS=1:GOTO 10130
# So (better) 
# This means that the name and 1,2 options are both required on the first play, but once self play is started, then they work automatically.
# and it works with the "no RUN" hack below 
10115 IF FS THEN WK$="ME":GOTO 10130

# To set FS on always, add
# (but then why add the whole FS flag hack? Unless you want to be able to slow down one particular game - useful)
10114 FS = 1


# Basically you do not need to modify lines before the pirates battle, or lines that aren't in the "game play loop"
#
# Unless... instead of RUN do GOTO at line 2699
# **NOTE**: Ensure that any variables that rely on not being declared at the start are in fact declared and set to zero - except for FS, obviously, unless you want it not to carry over (in which case, why would you do the following hack?!)
# NOTE: As there is a CLEAR statement at the start, then a destructive edit is required
10 WK$ = "*":CH$ = "*":CH% = 0:WU% = 0:R1% = 0:I = 0:J = 0:K = 0:II = 0:IJ = 0:IK = 0:T = 300:LT =  LOG (10):T$ = "Taipan": GOTO 10000
# or non-destructive
9 WK$ = "*":CH$ = "*":CH% = 0:WU% = 0:R1% = 0:I = 0:J = 0:K = 0:II = 0:IJ = 0:IK = 0:T = 300:LT =  LOG (10):T$ = "Taipan": GOTO 10000

# Optional: Not required for just one game
# Note: Using GOTO 1 causes a hang, no error is displayed strangely, as is the case if GOTO 1 is entered at the command prompt: UNDEF'D STATEMENT ERROR
2699 IF FS THEN GOTO 10
# or for the non destructive edit to line 10 (even though 2699 is naturally and unavoidably destructive)
2699 IF FS THEN GOTO 9
# But then we get a REDIM'D ARRAY ERROR in 10010
# Hmmm... could use a poke instead of a variable flag, or
# temporarily poke the value of FS before the CLEAR and then reinstate it.

#
# Summary of "Switchable"
#

# - Auto play from keypress - must play one game up to a battle
5646 IF W = 211 THEN FS=ABS(FS-1): PRINT "Self play  "

#
# - Autoplay from the start and with ability to slow just the current game down
# This is, arguably, the most useful as it means you can wait until you get a lot of guns, say 14,  and then you can play the game yourself. Effectively a cheat.
5646 IF W = 211 THEN FS=ABS(FS-1): PRINT "Self play  "
10114 FS = 1

# However due to 5604 and 5605 once the flag is set, the keypress and keypress test is jumped, so you can not turn off self play! 
# To fix, need to reorganise/rethink the battle hack to enable an actual keypress

#
# Switchable self play (End)
#


# BUG: "Your ship would be overburdened" printed across top panel if trying to buy a gun, when you already have 6 and have not yet upgraded the ship
# Seen twice:
# on Virtual [] and;
# on MAME/Ample (when running self play, at turbo speed)

#
# Variables not reset on GOTO 10 (that depended upon the CLEAR statement)
#

None? Or not yet discovered (due to difficulty posed by the CLEAR)

#
# Variables list
#

S0 (5080)

SK - Sunk pirates

DM (5550) -  damage???
SC (5550)

SA (5720) - Number of ships/pirates (differ from SN???)
SN - Number of ships/pirates
How are SA and SN related (see line 5230(?) and 5080, 5362)
SS (5683) - sunk ships???

Number of run away?
Number of pirate ships leaves on screen?


WW  (5920)
BT  (5920)
WW$ (5920)

T$ Taipan's name
